syntax = "proto2";
import "openrtb.proto";
option java_outer_classname = "PowerspaceExt";
package com.powerspace.openrtb;

message BidRequestExt {
    optional string forced_algorithm = 1001;
    optional string forced_deal = 1002;
    repeated int32 bcampaign = 1003; //blocked campaign
}

// Content (request)
message ContentExt {
    optional string channel = 1003;
}

// Site (request)
message SiteExt {
    reserved 1002;
    optional string network = 1001;
    optional string country = 1003;
}

// User (request)
message UserExt {
    reserved 1004;
    optional bool identified = 1000;
    optional bool suspicious = 1002;
}

// Device (request)
message DeviceExt {
    reserved 1000, 10001, 10002, 10003;
}

// Geo (request)
message GeoExt {
    reserved 10004;
    optional int32 geoNamesId = 1000;
    optional string admin1 = 10002;
    optional string admin2 = 10003;
}

// Link (response)
message LinkExt {
    reserved 1000;
}

// Bid (response)
message BidExt {
    optional double ctr = 1000;
    optional double cpc = 1001;
    optional string algorithm = 1002;

    optional double advertiserCpm = 1006;
    optional double advertiserCpc = 1004;

    optional double finalRevenue = 1003; // == margin

    optional double finalCpm = 1005;
    optional double finalRevshare = 1007;
    optional double internalDemandRevenue = 1008;

    optional double publisherPayout = 1009;
    optional double externalDemandRevenue = 1010;
}

extend com.google.openrtb.BidRequest {
    optional BidRequestExt bidRequest = 1000;
}

extend com.google.openrtb.BidRequest.Content {
    optional ContentExt contentExt = 1000;
}

extend com.google.openrtb.BidRequest.Site {
    optional SiteExt siteExt = 1000;
}

extend com.google.openrtb.BidRequest.User {
    optional UserExt user = 1000;
}

extend com.google.openrtb.BidRequest.Geo {
    optional GeoExt geo = 1000;
}

extend com.google.openrtb.BidResponse.SeatBid.Bid {
    optional BidExt bid = 1000;
}